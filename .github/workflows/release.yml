name: Build Binaries & Release

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  release:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install dependencies for cross-compilation
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-multilib g++-multilib

      - name: Build binaries for all targets
        run: |
          rustup target add x86_64-unknown-linux-gnu
          rustup target add aarch64-apple-darwin
          rustup target add aarch64-unknown-linux-gnu
          rustup target add aarch64-unknown-linux-musl
          rustup target add armv7-unknown-linux-gnueabihf
          rustup target add aarch64-linux-android
          rustup target add x86_64-pc-windows-msvc
          rustup target add aarch64-pc-windows-msvc
          rustup target add wasm32-unknown-unknown
          cargo build --release --all-targets --target-dir=./release

      - name: Publish to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release
          asset_name: release
          asset_content_type: application/octet-stream
