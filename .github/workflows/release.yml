name: Build Binaries & Release

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  release:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install dependencies for cross-compilation
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-multilib g++-multilib

      - name: Build binaries for all targets
        run: |
          cargo build --release --target=x86_64-unknown-linux-gnu
          cargo build --release --target=aarch64-apple-darwin
          cargo build --release --target=aarch64-unknown-linux-gnu
          cargo build --release --target=aarch64-unknown-linux-musl
          cargo build --release --target=armv7-unknown-linux-gnueabihf
          cargo build --release --target=aarch64-linux-android
          cargo build --release --target=x86_64-pc-windows-msvc
          cargo build --release --target=aarch64-pc-windows-msvc
          cargo build --release --target=wasm32-unknown-unknown

      - name: Get version
        id: get_version
        run: |
          VERSION=$(grep '^version =' crates/fta/Cargo.toml | sed 's/^version = "\(.*\)"/\1/')
          echo "Version: $VERSION"
          echo "FTA_VERSION={$VERSION}" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.FTA_VERSION }}
          release_name: Release ${{ steps.get_version.outputs.FTA_VERSION }}
          draft: false
          prerelease: false

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/*/*fta*
          tag: ${{ steps.get_version.outputs.FTA_VERSION }}
          overwrite: true
          file_glob: true
          
      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo publish --token $CARGO_REGISTRY_TOKEN
        working-directory: crates/fta
